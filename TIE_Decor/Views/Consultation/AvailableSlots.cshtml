<style>

    /* Đặt margin và padding của body về 0 */
    body {
        margin-top: -210px; /* Sử dụng giá trị âm */
    
    }

    /* Giảm khoảng cách trên cho tiêu đề */
 
 
    .designer-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 8px;
        width: 150px;
        cursor: pointer;
        text-align: center;
        transition: border-color 0.3s;
    }

        .designer-card:hover {
            border-color: #007bff;
        }

    .table-header {
        background-color: #f2f2f2;
        font-weight: bold;
    }

    .table-row {
        transition: background-color 0.3s;
    }

        .table-row:hover {
            background-color: #f9f9f9;
        }

    #designerInfo {
        transition: all 0.3s ease;
    }

        #designerInfo h4 {
            color: #333;
        }

        #designerInfo p {
            color: #555;
        }

    .btn-manage-booking {
        background-color: #B19777; /* Màu nút */
        border: 1px solid #ddd;
        color: #fff; /* Màu chữ */
        padding: 10px 20px;
        font-size: 16px;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        border-radius: 4px;
    }

        .btn-manage-booking:hover {
            background-color: #a68b65; /* Màu khi hover */
            border-color: #ccc;
            color: #fff; /* Màu chữ khi hover */
        }
</style>
<h2>Consultation Schedule</h2>
<div style="text-align: right; margin-bottom: 20px;">
    <a href="/Consultation/MyConsultations" class="btn btn-manage-booking">
        <i class="fas fa-calendar-check"></i> Manage My Bookings
    </a>
</div>

@if (ViewBag.AvailableSlots == null || !((Dictionary<DateTime, List<DateTime>>)ViewBag.AvailableSlots).Any())
{
    <p>Không còn khoảng thời gian trống cho tuần này.</p>
}
else
{
    var consultations = ViewBag.Consultations as List<Consultation>;
    var timeSlots = new List<DateTime>
    {
        new DateTime(2023, 1, 1, 8, 0, 0),   
        new DateTime(2023, 1, 1, 9, 30, 0),   
        new DateTime(2023, 1, 1, 14, 0, 0),   
        new DateTime(2023, 1, 1, 15, 30, 0)   
    };

    var currentTime = DateTime.Now;

    <table style="width: 100%; border-collapse: collapse; text-align: center; margin: 0 auto;">
        <thead>
            <tr style="background-color: #f2f2f2;">
                <th style="padding: 8px; width: 30%;">Date</th>
                <th style="padding: 8px; width: 50%;">Time Slot</th>
                <th style="padding: 8px; width: 20%;">Status</th>
                <th style="padding: 8px; width: 30%;">Book</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var day in ViewBag.AvailableSlots)
            {
                var date = day.Key.ToString("dddd, dd/MM/yyyy");
                var slots = day.Value;
                var slotCount = timeSlots.Count;

                foreach (var slot in timeSlots)
                {
                    var slotDateTime = day.Key.Add(slot.TimeOfDay);  // Combine date and time for the slot
                    var slotKey = day.Key.ToString("yyyy-MM-dd") + " " + slot.ToString("HH:mm");
                    var isBooked = consultations.Any(c => c.ScheduledTime.ToString("yyyy-MM-dd HH:mm") == slotKey);
                    var isPending = consultations.Any(c => c.ScheduledTime.ToString("yyyy-MM-dd HH:mm") == slotKey && c.Status == "Pending");

                    // Check if the time slot is in the past
                    var isPast = slotDateTime <= currentTime;

                    // Update status text based on booking status and past status
                    var statusText = isPast
                    ? "<span style='color: gray;'>Expired</span>"
                    : (isPending ? "<span style='color: orange;'>⏳ Pending</span>" : (isBooked ? "<span style='color: red;'>❌ Booked</span>" : "<span style='color: green;'>✅ Available</span>"));

                    if (slot == timeSlots.First())
                    {
                        <tr>
                            <td rowspan="@slotCount" style="padding: 8px;">@date</td>
                            <td style="padding: 8px;" data-slot-key="@slotKey">@slot.ToString("HH:mm")</td>
                            <td style="padding: 8px;" data-slot-key="@slotKey">@Html.Raw(statusText)</td>
                            <td style="padding: 8px;">
                                <form asp-action="ScheduleConsultation" method="post" onsubmit="return checkDesignerSelected(this);">
                                    <input type="hidden" name="selectedTime" value="@slotKey" />
                                    <input type="hidden" name="designerId" value="" />
                                    <button type="submit" style="padding: 5px 10px; width: 100%;" @(isBooked || isPending || isPast ? "disabled" : "")>
                                        Book
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td style="padding: 8px;" data-slot-key="@slotKey">@slot.ToString("HH:mm")</td>
                            <td style="padding: 8px;" data-slot-key="@slotKey">@Html.Raw(statusText)</td>
                            <td style="padding: 8px;">
                                <form asp-action="ScheduleConsultation" method="post" onsubmit="return checkDesignerSelected(this);">
                                    <input type="hidden" name="selectedTime" value="@slotKey" />
                                    <input type="hidden" name="designerId" value="" />
                                    <button type="submit" style="padding: 5px 10px; width: 100%;" @(isBooked || isPending || isPast ? "disabled" : "")>
                                        Book
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                }

            }
        </tbody>
    </table>


    <div style="margin-top: 20px;">
        <h3>Select a Designer:</h3>
        <div id="designersContainer" style="display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;">
            @foreach (var designer in ViewBag.Designers)
            {
                <div class="designer-card" onclick="selectDesigner(this)"
                     data-id="@designer.Id"
                     data-img="@designer.ImageUrl"
                     data-experience="@designer.YearsOfExperience"
                     data-expertise="@designer.Expertise"
                     data-portfolio="@designer.Portfolio"
                     style="border: 1px solid #ddd; border-radius: 8px; padding: 8px; width: 150px; cursor: pointer; text-align: center;">

                    <img src="/img/@designer.ImageUrl" alt="@designer.FullName" style="width: 100%; border-radius: 8px;" />
                    <h4 style="font-size: 14px;">@designer.FullName</h4>
                    <p style="font-size: 12px;">Experience: @designer.YearsOfExperience years</p>
                </div>
            }
        </div>

      <div id="designerInfo" style="margin-top: 20px; display: none; padding: 15px; border: 1px solid #ddd; border-radius: 8px; background-color: #f9f9f9;">
    <h4 id="selectedDesignerName" style="margin-bottom: 10px; font-weight: bold;"></h4>
    <div id="selectedImageUrl" style="margin-bottom: 10px; text-align: center;">
        <img src="" alt="Designer Image" style="max-width: 50%; border-radius: 8px;" id="designerImage" />
    </div>
    <p id="designerExperience" style="margin: 5px 0;"></p>
    <p id="designerExpertise" style="margin: 5px 0;"></p>
    <p id="designerPortfolio" style="margin: 5px 0;"></p>
</div>


        <input type="hidden" name="designerId" id="designerId" value="" />
    </div>

    <script>
        function isValidGuid(guid) {
            const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
            return guidRegex.test(guid);
        }

        function checkDesignerSelected(form) {
            var designerId = document.getElementById("designerId").value;
            if (!designerId || !isValidGuid(designerId)) {
                alert("Please select a valid designer before booking.");
                return false;
            }
            return true;
        }
        function selectDesigner(card) {
            var cards = document.getElementsByClassName('designer-card');
            for (var i = 0; i < cards.length; i++) {
                cards[i].style.border = '1px solid #ddd';
            }

            card.style.border = '2px solid #007bff';

            var designerId = card.getAttribute("data-id");
            var designerName = card.querySelector("h4").textContent;
            var designerImage = card.getAttribute("data-img");
            var designerExperience = card.getAttribute("data-experience");
            var designerExpertise = card.getAttribute("data-expertise");
            var designerPortfolio = card.getAttribute("data-portfolio");

            if (!isValidGuid(designerId)) {
                alert("Invalid designer ID. Please try again.");
                return;
            }

            document.getElementById("designerId").value = designerId;

            var forms = document.getElementsByTagName('form');
            for (var i = 0; i < forms.length; i++) {
                var designerIdInput = forms[i].querySelector('input[name="designerId"]');
                if (designerIdInput) {
                    designerIdInput.value = designerId;
                }
            }

            document.getElementById("selectedDesignerName").textContent = "Selected Designer: " + designerName;
            document.getElementById("selectedImageUrl").innerHTML = "<img src='/img/" + designerImage + "' style='max-width: 30%; height: auto; border-radius: 8px;' />"; // Thay đổi kích thước ở đây
            document.getElementById("designerExperience").textContent = "Experience: " + designerExperience + " years";
            document.getElementById("designerExpertise").textContent = "Expertise: " + designerExpertise;
            document.getElementById("designerPortfolio").textContent = "Portfolio: " + designerPortfolio;

            document.getElementById("designerInfo").style.display = 'block';
        }


        function updateStatusText(slotKey, status) {
            var statusElement = document.querySelector(`[data-slot-key='${slotKey}']`);
            if (statusElement) {
                statusElement.innerHTML = status === 'pending' ? "<span style='color: orange;'>⏳ Pending</span>"
                    : (status === 'booked' ? "<span style='color: red;'>❌ Booked</span>"
                        : "<span style='color: green;'>✅ Available</span>");
            }
        }
    </script>
}
