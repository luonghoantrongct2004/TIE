@model BlogViewModel

<div class="container-fluid">
    <div class="row">
        <div class="col-xl-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center gap-1">
                    <h4 class="card-title flex-grow-1">All Blog Posts</h4>

                    <a href="/admin/blogs/create" class="btn btn-sm btn-primary">
                        Add New Blog
                    </a>
                </div>

                <!-- Search Input -->
                <div class="p-3">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search by Title, Author, Created Date, or Updated Date" onkeyup="filterTable()">
                </div>

                <div>
                    <div class="table-responsive">
                        <table class="table align-middle mb-0 table-hover table-centered" id="blogTable">
                            <thead class="bg-light-subtle">
                                <tr>
                                    <th>Title</th>
                                    <th>Author</th>
                                    <th>Created Date</th>
                                    <th>Updated Date</th>
                                    <th>Image</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Blogs)
                                {
                                    <tr>
                                        <td>
                                            <a href="/admin/blog/details?id=@item.Id" class="text-dark fw-medium fs-15">
                                                @item.Title
                                            </a>
                                        </td>
                                        <td>
                                            <p class="mb-1 text-muted">
                                                <span class="text-dark fw-medium">@item.Author</span>
                                            </p>
                                        </td>
                                        <td>
                                            <p class="mb-1 text-muted">
                                                <span class="text-dark fw-medium">@item.CreatedDate.ToString("dd/MM/yyyy")</span>
                                            </p>
                                        </td>
                                        <td>
                                            <p class="mb-1 text-muted">
                                                <span class="text-dark fw-medium">@item.UpdatedDate?.ToString("dd/MM/yyyy")</span>
                                            </p>
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                                            {
                                                <div class="rounded bg-light avatar-md d-flex align-items-center justify-content-center">
                                                    <img src="@item.ImageUrl" alt="@item.Title" class="avatar-md">
                                                </div>
                                            }
                                            else
                                            {
                                                <span>No image</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="d-flex gap-2">
                                                <a href="/admin/blogs/details?id=@item.Id" class="btn btn-light btn-sm">
                                                    <iconify-icon icon="solar:eye-broken" class="align-middle fs-18"></iconify-icon>
                                                </a>
                                                <a href="/admin/blogs/edit?id=@item.Id" class="btn btn-soft-primary btn-sm">
                                                    <iconify-icon icon="solar:pen-2-broken" class="align-middle fs-18"></iconify-icon>
                                                </a>

                                                <form id="deleteForm-@item.Id" action="/admin/blogs/delete" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <input name="id" type="hidden" value="@item.Id" />
                                                    <button type="button" class="btn btn-soft-danger btn-sm" onclick="confirmDelete('@item.Id')">
                                                        <iconify-icon icon="solar:trash-bin-minimalistic-2-broken" class="align-middle fs-18"></iconify-icon>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- end table-responsive -->
                </div>
                <div class="card-footer border-top">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination justify-content-end mb-0">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item"><a class="page-link" href="/admin/blogs?page=@(Model.CurrentPage - 1)">Previous</a></li>
                            }

                            @for (var i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="/admin/blogs?page=@i">@i</a>
                                </li>
                            }

                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item"><a class="page-link" href="/admin/blogs?page=@(Model.CurrentPage + 1)">Next</a></li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript to filter the table based on input -->
<script>
    function filterTable() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("blogTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 1; i < tr.length; i++) {
            var showRow = false;
            var tds = tr[i].getElementsByTagName("td");
            for (var j = 0; j <= 3; j++) { // Check Title, Author, Created Date, Updated Date columns
                if (tds[j]) {
                    txtValue = tds[j].textContent || tds[j].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        showRow = true;
                    }
                }
            }
            tr[i].style.display = showRow ? "" : "none";
        }
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function confirmDelete(blogId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire(
                    'Deleted!',
                    'The blog post has been deleted.',
                    'success'
                );
                document.getElementById('deleteForm-' + blogId).submit();
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                Swal.fire(
                    'Cancelled',
                    'Your blog post is safe :)',
                    'error'
                );
            }
        });
    }
</script>